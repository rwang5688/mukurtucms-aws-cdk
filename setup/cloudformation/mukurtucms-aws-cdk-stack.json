{
    "Parameters": {
     "ec2KeyPair": {
      "Type": "String",
      "Default": "ec2-key-pair",
      "Description": "Key pair for the EC2 instance."
     },
     "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
     },
    },
    "Resources": {
     "mukurtucmsvpcA0251BFE": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
       "CidrBlock": "10.0.0.0/16",
       "EnableDnsHostnames": true,
       "EnableDnsSupport": true,
       "InstanceTenancy": "default",
       "Tags": [
        {
         "Key": "Name",
         "Value": "MukurtucmsAwsCdkStack/mukurtucms-vpc"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-vpc/Resource"
      }
     },
     "mukurtucmsvpcmukurtucmspublicSubnet1Subnet115BCF45": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
       "VpcId": {
        "Ref": "mukurtucmsvpcA0251BFE"
       },
       "AvailabilityZone": {
        "Fn::Select": [
         0,
         {
          "Fn::GetAZs": ""
         }
        ]
       },
       "CidrBlock": "10.0.0.0/24",
       "MapPublicIpOnLaunch": false,
       "Tags": [
        {
         "Key": "aws-cdk:subnet-name",
         "Value": "mukurtucms-public-"
        },
        {
         "Key": "aws-cdk:subnet-type",
         "Value": "Public"
        },
        {
         "Key": "Name",
         "Value": "MukurtucmsAwsCdkStack/mukurtucms-vpc/mukurtucms-public-Subnet1"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-vpc/mukurtucms-public-Subnet1/Subnet"
      }
     },
     "mukurtucmsvpcmukurtucmspublicSubnet1RouteTableDE932123": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
       "VpcId": {
        "Ref": "mukurtucmsvpcA0251BFE"
       },
       "Tags": [
        {
         "Key": "Name",
         "Value": "MukurtucmsAwsCdkStack/mukurtucms-vpc/mukurtucms-public-Subnet1"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-vpc/mukurtucms-public-Subnet1/RouteTable"
      }
     },
     "mukurtucmsvpcmukurtucmspublicSubnet1RouteTableAssociationD573541C": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
       "RouteTableId": {
        "Ref": "mukurtucmsvpcmukurtucmspublicSubnet1RouteTableDE932123"
       },
       "SubnetId": {
        "Ref": "mukurtucmsvpcmukurtucmspublicSubnet1Subnet115BCF45"
       }
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-vpc/mukurtucms-public-Subnet1/RouteTableAssociation"
      }
     },
     "mukurtucmsvpcmukurtucmspublicSubnet1DefaultRoute1E937E6B": {
      "Type": "AWS::EC2::Route",
      "Properties": {
       "RouteTableId": {
        "Ref": "mukurtucmsvpcmukurtucmspublicSubnet1RouteTableDE932123"
       },
       "DestinationCidrBlock": "0.0.0.0/0",
       "GatewayId": {
        "Ref": "mukurtucmsvpcIGW011DDED6"
       }
      },
      "DependsOn": [
       "mukurtucmsvpcVPCGW41146B79"
      ],
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-vpc/mukurtucms-public-Subnet1/DefaultRoute"
      }
     },
     "mukurtucmsvpcmukurtucmspublicSubnet2SubnetEE88E459": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
       "VpcId": {
        "Ref": "mukurtucmsvpcA0251BFE"
       },
       "AvailabilityZone": {
        "Fn::Select": [
         1,
         {
          "Fn::GetAZs": ""
         }
        ]
       },
       "CidrBlock": "10.0.1.0/24",
       "MapPublicIpOnLaunch": false,
       "Tags": [
        {
         "Key": "aws-cdk:subnet-name",
         "Value": "mukurtucms-public-"
        },
        {
         "Key": "aws-cdk:subnet-type",
         "Value": "Public"
        },
        {
         "Key": "Name",
         "Value": "MukurtucmsAwsCdkStack/mukurtucms-vpc/mukurtucms-public-Subnet2"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-vpc/mukurtucms-public-Subnet2/Subnet"
      }
     },
     "mukurtucmsvpcmukurtucmspublicSubnet2RouteTable953C9DD0": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
       "VpcId": {
        "Ref": "mukurtucmsvpcA0251BFE"
       },
       "Tags": [
        {
         "Key": "Name",
         "Value": "MukurtucmsAwsCdkStack/mukurtucms-vpc/mukurtucms-public-Subnet2"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-vpc/mukurtucms-public-Subnet2/RouteTable"
      }
     },
     "mukurtucmsvpcmukurtucmspublicSubnet2RouteTableAssociation97F7C7C4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
       "RouteTableId": {
        "Ref": "mukurtucmsvpcmukurtucmspublicSubnet2RouteTable953C9DD0"
       },
       "SubnetId": {
        "Ref": "mukurtucmsvpcmukurtucmspublicSubnet2SubnetEE88E459"
       }
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-vpc/mukurtucms-public-Subnet2/RouteTableAssociation"
      }
     },
     "mukurtucmsvpcmukurtucmspublicSubnet2DefaultRouteA347F2E4": {
      "Type": "AWS::EC2::Route",
      "Properties": {
       "RouteTableId": {
        "Ref": "mukurtucmsvpcmukurtucmspublicSubnet2RouteTable953C9DD0"
       },
       "DestinationCidrBlock": "0.0.0.0/0",
       "GatewayId": {
        "Ref": "mukurtucmsvpcIGW011DDED6"
       }
      },
      "DependsOn": [
       "mukurtucmsvpcVPCGW41146B79"
      ],
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-vpc/mukurtucms-public-Subnet2/DefaultRoute"
      }
     },
     "mukurtucmsvpcIGW011DDED6": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
       "Tags": [
        {
         "Key": "Name",
         "Value": "MukurtucmsAwsCdkStack/mukurtucms-vpc"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-vpc/IGW"
      }
     },
     "mukurtucmsvpcVPCGW41146B79": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
       "VpcId": {
        "Ref": "mukurtucmsvpcA0251BFE"
       },
       "InternetGatewayId": {
        "Ref": "mukurtucmsvpcIGW011DDED6"
       }
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-vpc/VPCGW"
      }
     },
     "mukurtucmsrdssecret5F8F72EF": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
       "GenerateSecretString": {
        "ExcludePunctuation": true,
        "GenerateStringKey": "password",
        "SecretStringTemplate": "{\"username\":\"admin\"}"
       },
       "Name": "mukurtucms-rds-secret"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-rds-secret/Resource"
      }
     },
     "mukurtucmsrdssecretAttachment505D9A3A": {
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
      "Properties": {
       "SecretId": {
        "Ref": "mukurtucmsrdssecret5F8F72EF"
       },
       "TargetId": {
        "Ref": "mukurtucmsrdsinstance9CC6EE3A"
       },
       "TargetType": "AWS::RDS::DBInstance"
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-rds-secret/Attachment/Resource"
      }
     },
     "mukurtucmsrdssgD6933982": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
       "GroupDescription": "Mukurtu CMS RDS Instance security group",
       "SecurityGroupEgress": [
        {
         "CidrIp": "0.0.0.0/0",
         "Description": "Allow all outbound traffic by default",
         "IpProtocol": "-1"
        }
       ],
       "VpcId": {
        "Ref": "mukurtucmsvpcA0251BFE"
       }
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-rds-sg/Resource"
      }
     },
     "mukurtucmsrdssgfromMukurtucmsAwsCdkStackmukurtucmsec2sgDD6DD30C3306DBEAE41F": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
       "IpProtocol": "tcp",
       "Description": "EC2 Instance to RDS Instance (MySQL)",
       "FromPort": 3306,
       "GroupId": {
        "Fn::GetAtt": [
         "mukurtucmsrdssgD6933982",
         "GroupId"
        ]
       },
       "SourceSecurityGroupId": {
        "Fn::GetAtt": [
         "mukurtucmsec2sg034D04A0",
         "GroupId"
        ]
       },
       "ToPort": 3306
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-rds-sg/from MukurtucmsAwsCdkStackmukurtucmsec2sgDD6DD30C:3306"
      }
     },
     "mukurtucmsrdsinstanceSubnetGroup19D12DB8": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
       "DBSubnetGroupDescription": "Subnet group for mukurtucms-rds-instance database",
       "SubnetIds": [
        {
         "Ref": "mukurtucmsvpcmukurtucmspublicSubnet1Subnet115BCF45"
        },
        {
         "Ref": "mukurtucmsvpcmukurtucmspublicSubnet2SubnetEE88E459"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-rds-instance/SubnetGroup/Default"
      }
     },
     "mukurtucmsrdsinstance9CC6EE3A": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
       "AllocatedStorage": "100",
       "CopyTagsToSnapshot": true,
       "DBInstanceClass": "db.m6i.large",
       "DBInstanceIdentifier": "mukurtucms-rds-instance",
       "DBSubnetGroupName": {
        "Ref": "mukurtucmsrdsinstanceSubnetGroup19D12DB8"
       },
       "Engine": "mysql",
       "EngineVersion": "8.0.30",
       "Iops": 1500,
       "MasterUsername": {
        "Fn::Join": [
         "",
         [
          "{{resolve:secretsmanager:",
          {
           "Ref": "mukurtucmsrdssecret5F8F72EF"
          },
          ":SecretString:username::}}"
         ]
        ]
       },
       "MasterUserPassword": {
        "Fn::Join": [
         "",
         [
          "{{resolve:secretsmanager:",
          {
           "Ref": "mukurtucmsrdssecret5F8F72EF"
          },
          ":SecretString:password::}}"
         ]
        ]
       },
       "PubliclyAccessible": false,
       "StorageEncrypted": true,
       "StorageType": "io1",
       "VPCSecurityGroups": [
        {
         "Fn::GetAtt": [
          "mukurtucmsrdssgD6933982",
          "GroupId"
         ]
        }
       ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-rds-instance/Resource"
      }
     },
     "mukurtucmsec2sg034D04A0": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
       "GroupDescription": "Mukurtu CMS EC2 Instance security group",
       "SecurityGroupEgress": [
        {
         "CidrIp": "0.0.0.0/0",
         "Description": "Allow all outbound traffic by default",
         "IpProtocol": "-1"
        }
       ],
       "SecurityGroupIngress": [
        {
         "CidrIp": "0.0.0.0/0",
         "Description": "allow SSH access from anywhere",
         "FromPort": 22,
         "IpProtocol": "tcp",
         "ToPort": 22
        },
        {
         "CidrIp": "0.0.0.0/0",
         "Description": "allow HTTP traffic from anywhere",
         "FromPort": 80,
         "IpProtocol": "tcp",
         "ToPort": 80
        },
        {
         "CidrIp": "0.0.0.0/0",
         "Description": "allow HTTPS traffic from anywhere",
         "FromPort": 443,
         "IpProtocol": "tcp",
         "ToPort": 443
        }
       ],
       "VpcId": {
        "Ref": "mukurtucmsvpcA0251BFE"
       }
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-ec2-sg/Resource"
      }
     },
     "mukurtucmsec2role1628757B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
       "AssumeRolePolicyDocument": {
        "Statement": [
         {
          "Action": "sts:AssumeRole",
          "Effect": "Allow",
          "Principal": {
           "Service": {
            "Fn::Join": [
             "",
             [
              "ec2.",
              {
               "Ref": "AWS::URLSuffix"
              }
             ]
            ]
           }
          }
         }
        ],
        "Version": "2012-10-17"
       },
       "ManagedPolicyArns": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::aws:policy/AmazonS3ReadOnlyAccess"
          ]
         ]
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-ec2-role/Resource"
      }
     },
     "mukurtucmsec2instanceInstanceProfile8C6960E0": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
       "Roles": [
        {
         "Ref": "mukurtucmsec2role1628757B"
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-ec2-instance/InstanceProfile"
      }
     },
     "mukurtucmsec2instanceE5974AD2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
       "AvailabilityZone": {
        "Fn::Select": [
         0,
         {
          "Fn::GetAZs": ""
         }
        ]
       },
       "IamInstanceProfile": {
        "Ref": "mukurtucmsec2instanceInstanceProfile8C6960E0"
       },
       "ImageId": {
        "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
       },
       "InstanceType": "m6i.large",
       "KeyName": {
        "Ref": "ec2KeyPair"
       },
       "SecurityGroupIds": [
        {
         "Fn::GetAtt": [
          "mukurtucmsec2sg034D04A0",
          "GroupId"
         ]
        }
       ],
       "SubnetId": {
        "Ref": "mukurtucmsvpcmukurtucmspublicSubnet1Subnet115BCF45"
       },
       "Tags": [
        {
         "Key": "Name",
         "Value": "MukurtucmsAwsCdkStack/mukurtucms-ec2-instance"
        }
       ],
       "UserData": {
        "Fn::Base64": "#!/bin/bash\n#!/bin/bash\r\n# use linux script session to record the installation\r\nscript /home/ec2-user/install.out\r\n\r\n# apply latest patches\r\nsudo yum update -y\r\n\r\n# install PHP and required extensions\r\nsudo amazon-linux-extras install -y epel\r\nsudo yum -y install http://rpms.remirepo.net/enterprise/remi-release-7.rpm\r\n\r\nsudo yum install -y yum-utils\r\nsudo yum-config-manager --disable remi-php54\r\nyum-config-manager --enable remi-php74\r\n\r\nsudo amazon-linux-extras install -y php7.4\r\nsudo yum install -y php-{gd,mbstring}\r\n\r\n# confirm that we have installed PHP 7.4.\r\nphp --version\r\n\r\n# confirm initial values of the following parameters that we have to change\r\ngrep max_execution_time /etc/php.ini\r\ngrep memory_limit /etc/php.ini\r\ngrep post_max_size /etc/php.ini\r\ngrep upload_max_filezie /etc/php.ini\r\n\r\n# install ImageMagick\r\nsudo yum install -y php-pear php-devel gcc\r\nsudo yum install -y ImageMagick ImageMagick-devel ImageMagick-perl\r\n\r\n# confirm that we have installed ImageMagick\r\nconvert --version\r\n\r\n# install Apache web server\r\nsudo yum -y install httpd\r\nsudo systemctl enable --now httpd\r\n\r\nsudo yum install -y firewalld\r\nsudo systemctl enable --now firewalld\r\n\r\nsudo firewall-cmd --add-service={http,https} --permanent\r\nsudo firewall-cmd --reload\r\n\r\n# confirm that we have installed and started Apache web server\r\nsystemctl status httpd\r\n\r\n# create vhost with Apache access and error logs\r\ncd /etc/httpd/conf.d\r\nsudo cat << EOF > vhosts.conf\r\n<VirtualHost *:80>\r\n  # The name your website should respond to\r\n  ServerName mukurtu.rwang5688.com\r\n\r\n  # if you want this vhost to listen to extra names, uncomment the next line\r\n  # ServerAlias foo.com www.bar.com bar.com\r\n\r\n  # Tell Apache where your document root is\r\n  DocumentRoot /var/www/html/mukurtucms\r\n\r\n  # Add this line if you are allowing .htaccess overrides.\r\n  <Directory /var/www/html/mukurtucms>\r\n    AllowOverride All\r\n  </Directory>\r\n\r\n  CustomLog /var/log/apache/mukurtu.rwang5688.com-access.log combined\r\n  ErrorLog /var/log/apache/mukurtu.rwang5688.com-error.log\r\n</VirtualHost>\r\nEOF\r\nsudo mkdir /var/log/apache\r\nsudo service httpd restart\r\n\r\n# confirm that we have correctly created vhost\r\ncat /etc/httpd/conf.d/vhosts.conf\r\n\r\n# install git and download mukurtucms\r\nsudo yum install -y git\r\ncd /home/ec2-user\r\nmkdir workspace\r\ncd workspace\r\ngit clone https://github.com/MukurtuCMS/mukurtucms.git\r\ncp mukurtucms/sites/default/default.settings.php settings.php\r\nsudo chown -R ec2-user:ec2-user /home/ec2-user/workspace\r\n\r\n# confirm that we have successfully copied settings.php\r\nls -l mukurtucms/sites/default/settings.php\r\n\r\n# install mysql client\r\nsudo yum install -y mysql\r\n\r\n# confirm that we have installed MySQL client\r\nmysql --version\r\n\r\n# finish and flush the linux script session\r\nexit\r\n\r\n## one-time setup setps prior to copy to /var/www/html\r\n\r\n# sudo nano /etc/php.ini and set the following parameters:\r\n# Resource limits\r\n#max_execution_time = 240\r\n#memory_limit = 512M\r\n# Data handling\r\n#post_max_size = 256M\r\n# File upload\r\n#upload_max_filesize = 256M\r\n\r\n# reboot to make sure the /etc/php.ini parameter changes take effect\r\n\r\n# under SecretsManager > projectName-rds-secret, look up the admin password\r\n# under RDS > Databases > projectName-rds-instance, look up the hostname\r\n# nano mukurtucms/sites/default/settings.php (the copy) and set the following parameters:\r\n# Database parameters\r\n#name = mukurtucms\r\n#username = admin\r\n#password = admin_password\r\n#host = hostname\r\n\r\n## recurring setup steps for updating /var/www/html\r\n\r\n# mysql -h hostname -P 3306 -u admin -p admin_password\r\n# <MYSQL> show databases;\r\n# <MYSQL> drop database mukurtucms;\r\n# <MYSQL> create database mukurtucms;\r\n# <MYSQL> exit;\r\n\r\n# cd ~/workspace\r\n# sudo rm -rf /var/www/html/mukurtucms\r\n# sudo cp -r mukurtucms /var/www/html/\r\n# sudo chown -R apache:apache /var/www/html/mukurtucms\r\n# sudo service httpd restart\r\n"
       }
      },
      "DependsOn": [
       "mukurtucmsec2role1628757B"
      ],
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/mukurtucms-ec2-instance/Resource"
      }
     },
     "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
       "Analytics": "v2:deflate64:H4sIAAAAAAAA/31RwW6DMAz9lt1DtqIdtmNHpYobgqrXyQSXpYWkip1VFeLfFwqFapN28vN7Vt6zE8vXd/nyBBeKVHWKGl3KrmBQJ5EcTAYOWmR0IuifHapYdvuzGqR9lojMl41WhS8N8sAtKLeecQdlgwu/cGsiqzSwtmYeHkBqglWY3ALjBa6TzdStOaT6atGwKFB5p/m6ddafbwb/EqmpHRKJ1BCDUZPViHtBqBwytWCgRheWv/XTIwMayw5cjfwQYh74rfTCVSS7DTCUQDi7jleYI24+/hBLKA2t7HI7nu9e73Lm7EE32PciR7LejRs94sSaSg/n7YWxFcojPX+v3uQqDj99JK0j5w3rFmU+1h+fTVLPBQIAAA=="
      },
      "Metadata": {
       "aws:cdk:path": "MukurtucmsAwsCdkStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
     }
    },
    "Conditions": {
     "CDKMetadataAvailable": {
      "Fn::Or": [
       {
        "Fn::Or": [
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "af-south-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "ap-east-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "ap-northeast-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "ap-northeast-2"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "ap-south-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "ap-southeast-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "ap-southeast-2"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "ca-central-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "cn-north-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "cn-northwest-1"
          ]
         }
        ]
       },
       {
        "Fn::Or": [
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "eu-central-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "eu-north-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "eu-south-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "eu-west-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "eu-west-2"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "eu-west-3"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "me-south-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "sa-east-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "us-east-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "us-east-2"
          ]
         }
        ]
       },
       {
        "Fn::Or": [
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "us-west-1"
          ]
         },
         {
          "Fn::Equals": [
           {
            "Ref": "AWS::Region"
           },
           "us-west-2"
          ]
         }
        ]
       }
      ]
     }
    },
}